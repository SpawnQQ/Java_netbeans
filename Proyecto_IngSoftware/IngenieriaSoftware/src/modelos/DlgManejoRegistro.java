/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modelos;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static modelos.DlgIngresarModificacion.fechaActual;
import static modelos.DlgIngresoRegistro.fechaActual;
import servicios.Conexion;
import servicios.Registro_servicio;

//1) No me actualiza la tabla despues de eliminar un registro*
//2) Quiero manejar mas de una tabla, ya que la cantidad maxima de elementos por tabla es tan solo de 100
public class DlgManejoRegistro extends javax.swing.JDialog {

    /**
     * Creates new form DlgManejoRegistro
     */
    void borrarTabla() {
        this.setLocationRelativeTo(null);
        int nroFilas = 0;
        DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
        modeloDeMiTabla.addRow(new Object[nroFilas]);
        for (nroFilas = 0; nroFilas < 100; nroFilas++) {
            tbRegistro.setValueAt(false, nroFilas, 0);
            tbRegistro.setValueAt(null, nroFilas, 1);
            tbRegistro.setValueAt(null, nroFilas, 2);
            tbRegistro.setValueAt(null, nroFilas, 3);
            tbRegistro.setValueAt(null, nroFilas, 4);
            tbRegistro.setValueAt(null, nroFilas, 5);
        }

    }

    public static String fechaActual() {
        Date fecha = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatoFecha.format(fecha);
    }

    public DlgManejoRegistro(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
         this.setLocationRelativeTo(null);
        pnlFecha.setVisible(false);
        int nroFilas = 0;
        DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
        modeloDeMiTabla.addRow(new Object[nroFilas]);
        Registro_servicio rs = new Registro_servicio();
        Conexion con = new Conexion();
        Connection reg = con.obtenerConexion();
        try {
            PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro");
            ResultSet resultado = consulta.executeQuery();
            while (resultado.next()) {
                tbRegistro.setValueAt(false, nroFilas, 0);
                tbRegistro.setValueAt(resultado.getString("id_registro"), nroFilas, 1);
                tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                nroFilas++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Registro_servicio.class.getName()).log(Level.SEVERE, null, ex);
        }
        nroFilas = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnTablaRegistro = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRegistro = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnPedidos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cmbBusqueda = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        pnlFecha = new javax.swing.JPanel();
        txtFechaAA = new javax.swing.JTextField();
        txtFechaMM = new javax.swing.JTextField();
        txtFechaDD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnFechaActual = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnTablaRegistro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de registro"));

        tbRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Boolean(false), null, null, null, null, null},
                { new Boolean(false), null, null, null, null, null},
                { new Boolean(false), null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "", "Codigo", "Medicamento", "Fecha", "Medida", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbRegistro.setToolTipText("Datos de registro");
        jScrollPane1.setViewportView(tbRegistro);
        if (tbRegistro.getColumnModel().getColumnCount() > 0) {
            tbRegistro.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        javax.swing.GroupLayout pnTablaRegistroLayout = new javax.swing.GroupLayout(pnTablaRegistro);
        pnTablaRegistro.setLayout(pnTablaRegistroLayout);
        pnTablaRegistroLayout.setHorizontalGroup(
            pnTablaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTablaRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnTablaRegistroLayout.setVerticalGroup(
            pnTablaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTablaRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manejo del registro de bodega");
        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1446604383_list-add.png"))); // NOI18N
        btnAgregar.setToolTipText("Agregar registro");
        btnAgregar.setMaximumSize(new java.awt.Dimension(32, 32));
        btnAgregar.setMinimumSize(new java.awt.Dimension(32, 32));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1446604726_trash.png"))); // NOI18N
        btnBorrar.setToolTipText("Eliminar registro seleccionado");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1446604054_Notes.png"))); // NOI18N
        btnModificar.setToolTipText("Modificar registro seleccionado");
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1446607608_adept_update.png"))); // NOI18N
        btnActualizar.setToolTipText("Carga la base de datos");
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
        });

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1446609011_go-back.png"))); // NOI18N
        btnVolver.setToolTipText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1447695944_kpdf.png"))); // NOI18N
        btnPedidos.setToolTipText("Consultar pedidos");
        btnPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPedidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Buscar por..."));

        cmbBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una categoria", "Nombre", "Codigo", "Fecha", "Medida", "Stock" }));
        cmbBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbBusquedaFocusLost(evt);
            }
        });
        cmbBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbBusquedaMouseExited(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1447384412_folder-search.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtFechaAA.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFechaAA.setText("AAAA");
        txtFechaAA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaAAFocusGained(evt);
            }
        });

        txtFechaMM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFechaMM.setText("MM");
        txtFechaMM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaMMFocusGained(evt);
            }
        });

        txtFechaDD.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFechaDD.setText("DD");
        txtFechaDD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaDDFocusGained(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("-");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("-");

        btnFechaActual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1447540743_calendar-clock.png"))); // NOI18N
        btnFechaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaActualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFechaLayout = new javax.swing.GroupLayout(pnlFecha);
        pnlFecha.setLayout(pnlFechaLayout);
        pnlFechaLayout.setHorizontalGroup(
            pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFechaLayout.createSequentialGroup()
                .addComponent(txtFechaAA, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFechaMM, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFechaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFechaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlFechaLayout.setVerticalGroup(
            pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFechaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaAA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaMM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16))
            .addGroup(pnlFechaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFechaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pnlFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(304, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnTablaRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnTablaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        DlgIngresoRegistro dg = new DlgIngresoRegistro(new javax.swing.JDialog(), true);
        dg.setVisible(true);
        dg.dispose();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        int resp=JOptionPane.showConfirmDialog(this,"Seguro que desea Eliminar datos del registro de bodega?","Confirma",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(resp==JOptionPane.OK_OPTION){
        Conexion con = new Conexion();
        Connection reg = con.obtenerConexion();
        Registro_servicio rs = new Registro_servicio();
        int id_registro;
        String idregistro,usuario="";
        try {
            for (int i = 0; i < tbRegistro.getRowCount(); i++) {
                boolean a = Boolean.parseBoolean(tbRegistro.getValueAt(i, 0).toString());
                if (a == true) {
                    idregistro = tbRegistro.getValueAt(i, 1).toString();
                    id_registro = Integer.parseInt(idregistro);
                    rs.eliminar(reg, id_registro);
                    try {
                    try {
                        FileReader f = new FileReader("guardarUsuario.txt");
                        Scanner sf = new Scanner(f);
                        usuario = sf.nextLine();
                        sf.close();
                    } catch (IOException e) {
                    }
                    PreparedStatement consulta = reg.prepareStatement("SELECT * FROM usuario");
                    ResultSet resultado = consulta.executeQuery();
                    while (resultado.next()) {
                        if (resultado.getString("nick_usuario").equals(usuario)) {
                            try {
                                FileWriter f = new FileWriter("registroFlujoSistema.txt", true);
                                PrintWriter pf = new PrintWriter(f);
                                pf.println(resultado.getString("nick_usuario") + "    " + resultado.getString("nombre") + "  " + resultado.getString("apellidos") + " " + resultado.getString("cargo_administrativo") + " " + resultado.getString("unidad") +"  "+"Elimino datos del registro de medicamentos"+ "   "+ fechaActual());
                                pf.close();
                            } catch (Exception ex) {
                            }
                        }
                    }
                } catch (SQLException ex) {

                }
                
                }
                
            }
        } catch (Exception ex) {

        }
            JOptionPane.showMessageDialog(this,"Se han eliminado correctamente");
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked
        // TODO add your handling code here:
        borrarTabla();
        int nroFilas = 0;
        DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
        modeloDeMiTabla.addRow(new Object[nroFilas]);
        Registro_servicio rs = new Registro_servicio();
        Conexion con = new Conexion();
        Connection reg = con.obtenerConexion();
        try {
            PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro");
            ResultSet resultado = consulta.executeQuery();
            while (resultado.next()) {
                tbRegistro.setValueAt(false, nroFilas, 0);
                tbRegistro.setValueAt(resultado.getString("id_registro"), nroFilas, 1);
                tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                nroFilas++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Registro_servicio.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnActualizarMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        // TODO add your handling code here:
        int contador = 0, fila = 0, id_registro;
        Conexion con = new Conexion();
        Connection reg = con.obtenerConexion();
        try {
            for (int i = 0; i < tbRegistro.getRowCount(); i++) {
                boolean a = Boolean.parseBoolean(tbRegistro.getValueAt(i, 0).toString());
                if (a == true) {
                    contador++;
                    fila = i;
                }
            }
        } catch (Exception ex) {

        }
        if (contador > 1) {
            JOptionPane.showMessageDialog(this, "Porfavor, seleccione un solo item para modificar");
        } else {
            if (contador == 0) {
                JOptionPane.showMessageDialog(this, "Porfavor, seleccione un item a modificar");
            } else {
                if (contador == 1) {
                    id_registro = Integer.parseInt(tbRegistro.getValueAt(fila, 1).toString());
                    try {
                        FileWriter f = new FileWriter("guardarValor.txt");
                        PrintWriter pf = new PrintWriter(f);
                        pf.println(id_registro);
                        pf.close();
                    } catch (Exception ex) {
                    }
                    DlgIngresarModificacion dimod = new DlgIngresarModificacion(new javax.swing.JDialog(), true);
                    dimod.setVisible(true);
                    dimod.dispose();
                }
            }
        }
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        Conexion con = new Conexion();
        Connection reg = con.obtenerConexion();
        String busqueda = (String) cmbBusqueda.getSelectedItem();
        borrarTabla();
        if (busqueda.equals("Nombre")) {
            int nroFilas = 0;
            DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
            modeloDeMiTabla.addRow(new Object[nroFilas]);
            try {
                PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro");
                ResultSet resultado = consulta.executeQuery();
                while (resultado.next()) {
                    if (resultado.getString("nombre").equals(txtBusqueda.getText())) {
                        tbRegistro.setValueAt(false, nroFilas, 0);
                        tbRegistro.setValueAt(resultado.getInt("id_registro"), nroFilas, 1);
                        tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                        tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                        tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                        tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                        nroFilas++;
                    }
                }
            } catch (SQLException ex) {
                System.out.printf("No hace nada");
            }
        } else {
            if (busqueda.equals("Codigo")) {
                int nroFilas = 0;
                DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
                modeloDeMiTabla.addRow(new Object[nroFilas]);
                try {
                    PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro WHERE id_registro=" + txtBusqueda.getText());
                    ResultSet resultado = consulta.executeQuery();
                    while (resultado.next()) {
                        tbRegistro.setValueAt(false, nroFilas, 0);
                        tbRegistro.setValueAt(resultado.getInt("id_registro"), nroFilas, 1);
                        tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                        tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                        tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                        tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                        nroFilas++;
                    }
                } catch (SQLException ex) {
                    System.out.printf("No hace nada");
                }
            } else {
                if (busqueda.equals("Fecha")) {
                    int nroFilas = 0;
                    DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
                    modeloDeMiTabla.addRow(new Object[nroFilas]);
                    try {
                        PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro");
                        ResultSet resultado = consulta.executeQuery();
                        while (resultado.next()) {
                            if (resultado.getString("fecha").equals(txtFechaAA.getText() + "-" + txtFechaMM.getText() + "-" + txtFechaDD.getText())) {
                                tbRegistro.setValueAt(false, nroFilas, 0);
                                tbRegistro.setValueAt(resultado.getInt("id_registro"), nroFilas, 1);
                                tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                                tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                                tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                                tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                                nroFilas++;
                            }
                        }
                    } catch (SQLException ex) {
                        System.out.printf("No hace nada");
                    }
                } else {
                    if (busqueda.equals("Medida")) {
                        int nroFilas = 0;
                        DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
                        modeloDeMiTabla.addRow(new Object[nroFilas]);
                        try {
                            PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro");
                            ResultSet resultado = consulta.executeQuery();
                            while (resultado.next()) {
                                if (resultado.getString("medida").equals(txtBusqueda.getText())) {
                                    tbRegistro.setValueAt(false, nroFilas, 0);
                                    tbRegistro.setValueAt(resultado.getInt("id_registro"), nroFilas, 1);
                                    tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                                    tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                                    tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                                    tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                                    nroFilas++;
                                }
                            }
                        } catch (SQLException ex) {
                            System.out.printf("No hace nada");
                        }
                    } else {
                        if (busqueda.equals("Stock")) {
                            int nroFilas = 0;
                            DefaultTableModel modeloDeMiTabla = (DefaultTableModel) tbRegistro.getModel();
                            modeloDeMiTabla.addRow(new Object[nroFilas]);
                            try {
                                PreparedStatement consulta = reg.prepareStatement("SELECT * FROM registro");
                                ResultSet resultado = consulta.executeQuery();
                                while (resultado.next()) {
                                    if (resultado.getInt("stock") == Integer.parseInt(txtBusqueda.getText())) {
                                        tbRegistro.setValueAt(false, nroFilas, 0);
                                        tbRegistro.setValueAt(resultado.getInt("id_registro"), nroFilas, 1);
                                        tbRegistro.setValueAt(resultado.getString("nombre"), nroFilas, 2);
                                        tbRegistro.setValueAt(resultado.getString("fecha"), nroFilas, 3);
                                        tbRegistro.setValueAt(resultado.getString("medida"), nroFilas, 4);
                                        tbRegistro.setValueAt(resultado.getInt("stock"), nroFilas, 5);

                                        nroFilas++;
                                    }
                                }
                            } catch (SQLException ex) {
                                System.out.printf("No hace nada");
                            }
                        } else {

                        }
                    }

                }

            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void cmbBusquedaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbBusquedaFocusLost
        // TODO add your handling code here:
        String fecha = (String) cmbBusqueda.getSelectedItem();
        if (fecha.equals("Fecha")) {
            pnlFecha.setVisible(true);
            txtFechaAA.requestFocus();
        } else {
            pnlFecha.setVisible(false);
        }

    }//GEN-LAST:event_cmbBusquedaFocusLost

    private void cmbBusquedaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbBusquedaMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBusquedaMouseExited

    private void txtFechaAAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaAAFocusGained
        // TODO add your handling code here:
        txtFechaAA.setText(null);
        String vacio = "";
        if (txtFechaMM.getText().equals(vacio)) {
            txtFechaMM.setText("MM");
        }
        if (txtFechaDD.getText().equals(vacio)) {
            txtFechaDD.setText("DD");
        }
    }//GEN-LAST:event_txtFechaAAFocusGained

    private void txtFechaMMFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaMMFocusGained
        // TODO add your handling code here:
        txtFechaMM.setText(null);
        String vacio = "";
        if (txtFechaAA.getText().equals(vacio)) {
            txtFechaAA.setText("AAAA");
        }
        if (txtFechaDD.getText().equals(vacio)) {
            txtFechaDD.setText("DD");
        }
    }//GEN-LAST:event_txtFechaMMFocusGained

    private void txtFechaDDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaDDFocusGained
        // TODO add your handling code here:
        txtFechaDD.setText(null);
        txtFechaDD.setText(null);
        String vacio = "";
        if (txtFechaAA.getText().equals(vacio)) {
            txtFechaAA.setText("AAAA");
        }
        if (txtFechaMM.getText().equals(vacio)) {
            txtFechaMM.setText("MM");
        }
    }//GEN-LAST:event_txtFechaDDFocusGained

    private void btnFechaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaActualActionPerformed
        // TODO add your handling code here:
        String[] fecha = fechaActual().split("/");
        txtFechaDD.setText(fecha[0]);
        txtFechaMM.setText(fecha[1]);
        txtFechaAA.setText(fecha[2]);
    }//GEN-LAST:event_btnFechaActualActionPerformed

    private void btnPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidosActionPerformed
        // TODO add your handling code here:
        DlgRecibirPedidos drp = new DlgRecibirPedidos(new javax.swing.JDialog(), true);
        drp.setVisible(true);
        drp.dispose();
    }//GEN-LAST:event_btnPedidosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgManejoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgManejoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgManejoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgManejoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgManejoRegistro dialog = new DlgManejoRegistro(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnFechaActual;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnPedidos;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox cmbBusqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnTablaRegistro;
    private javax.swing.JPanel pnlFecha;
    private javax.swing.JTable tbRegistro;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtFechaAA;
    private javax.swing.JTextField txtFechaDD;
    private javax.swing.JTextField txtFechaMM;
    // End of variables declaration//GEN-END:variables
}
